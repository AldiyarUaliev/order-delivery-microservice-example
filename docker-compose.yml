x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-pinot-depends-on: &pinot-depends-on
  - kafka
  - zookeeper
x-order-delivery-service-depends-on: &order-delivery-service-depends-on
  - mysql
  - kafka
  - zookeeper
x-superset-volumes: &superset-volumes
  - ./docker/docker-init.sh:/app/docker-init.sh
  - ./docker/pinot-dashboard.json:/app/pinot-dashboard.json
  - ./docker/pinot-database.yml:/app/pinot-database.yml
  - ./docker/pythonpath_dev:/app/pythonpath
  - superset_home:/app/superset_home

version: "3.7"

services:
  redis:
    image: kbastani2/noaa-pinot-superset-cache
    container_name: superset_cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis:/data
    networks:
      - PinotNetwork
  db:
    env_file: docker/.env
    image: kbastani2/noaa-pinot-superset-db
    container_name: superset_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db_home:/var/lib/postgresql/data
    networks:
      - PinotNetwork
  superset:
    env_file: docker/.env
    image: kbastani2/noaa-pinot-superset-app
    container_name: superset_app
    command: ["flask", "run", "-p", "8088", "--with-threads", "--reload", "--debugger", "--host=0.0.0.0"]
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - PinotNetwork
  zookeeper:
    image: debezium/zookeeper:1.5
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - PinotNetwork
  kafka:
    image: debezium/kafka:1.5
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ADVERTISED_HOST_NAME=kafka
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - PinotNetwork
  connect:
    image: debezium/connect:1.5
    ports:
      - 8083:8083
    links:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - PinotNetwork
  mysql:
    image: debezium/example-mysql:1.5
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
     - db_data:/var/lib/mysql
     - ./mysql_init.sql:/docker-entrypoint-initdb.d/mysql_init.sql
    networks:
      - PinotNetwork
  pinot:
    image: apachepinot/pinot:release-0.7.1
    command: "QuickStart -type batch"
    ports:
      - "9000:9000/tcp"
      - "8000:8000/tcp"
    depends_on: *pinot-depends-on
    networks:
      - PinotNetwork
  order-delivery-service:
    image: order-web:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080/tcp"
    depends_on: *order-delivery-service-depends-on
    restart: on-failure
    networks:
      - PinotNetwork
  load-simulator:
    image: load-simulator:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    links:
      - order-delivery-service
    networks:
      - PinotNetwork

networks:
  PinotNetwork:
    external:
      name: PinotNetwork

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
  db_data:
    external: true
