x-order-delivery-service-depends-on: &order-delivery-service-depends-on
  - mysql
  - kafka
  - zookeeper
  - discovery-service
  - pinot
x-pinot-depends-on: &pinot-depends-on
  - kafka
  - zookeeper

version: "3.7"

services:
  zookeeper:
    image: debezium/zookeeper:1.5
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - PinotNetwork
  kafka:
    image: debezium/kafka:1.5
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ADVERTISED_HOST_NAME=kafka
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - PinotNetwork
  connect:
    image: debezium/connect:1.5
    ports:
      - 8083:8083
    links:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    volumes:
      # from https://github.com/RedHatInsights/expandjsonsmt/
      - ./kafka-connect-smt-expandjsonsmt-0.0.7-assemble-all.jar:/kafka/connect/debezium-connector-mysql/expandjsonsmt.jar
    networks:
      - PinotNetwork
  mysql:
    image: debezium/example-mysql:1.5
    ports:
      - "3306:3306/tcp"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    tmpfs:
      - /var/lib/mysql
    volumes:
      - ./mysql_init.sql:/docker-entrypoint-initdb.d/mysql_init.sql
    networks:
      - PinotNetwork
  discovery-service:
    image: discovery-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8761:8761/tcp"
    restart: on-failure
    networks:
      - PinotNetwork
  api-gateway:
    image: api-gateway:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "9090:9090/tcp"
    depends_on:
      - discovery-service
    restart: on-failure
    networks:
      - PinotNetwork
  order-delivery-service:
    image: order-web:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 0
    depends_on: *order-delivery-service-depends-on
    restart: on-failure
    networks:
      - PinotNetwork
  load-simulator:
    image: load-simulator:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 0
    depends_on:
      - discovery-service
      - order-delivery-service
    restart: on-failure
    networks:
      - PinotNetwork
  pinot:
    image: apachepinot/pinot:release-0.7.1
    command: "QuickStart -type batch"
    ports:
      - "9000:9000/tcp"
      - "8000:8000/tcp"
    depends_on: *pinot-depends-on
    networks:
      - PinotNetwork

networks:
  PinotNetwork:
    external:
      name: PinotNetwork

volumes:
  db_data:
    external: false
