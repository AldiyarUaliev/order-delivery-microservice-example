spring:
  profiles:
    active: docker
  cloud:
    stream:
      kafka:
        binder:
          auto-add-partitions: true
      bindings:
        output:
          binder: kafka
          destination: order
          contentType: 'application/json'
          group: order-group
          producer:
            partition-key-expression: headers['primaryKey']
            partition-count: 12
            requiredGroups: order-group
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
server:
  port: 8080
events:
  worker: http://order-worker/v1/events
---
spring:
  config:
    activate:
      on-profile:
        - development
  cloud:
    stream:
      kafka:
        binder:
          brokers: "PLAINTEXT://kafka:29092"
  jpa:
    show_sql: false
    database: H2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
    initialize: false
---
spring:
  config:
    activate:
      on-profile:
        - docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: "PLAINTEXT://kafka:29092"
  datasource:
    hikari:
      maximum-pool-size: 10000
    platform: mysql
    url: jdbc:mysql://mysql:3306/bootdb
    username: root
    password: root
    initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    generate-ddl: true
---
spring:
  profiles: test
  jpa:
    show_sql: false
    database: H2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
    initialize: false
eureka:
  client:
    enabled: false
logging:
  level:
    org:
      apache:
        zookeeper:
          ZooKeeper: error
    org.apache.kafka.clients.producer.ProducerConfig: error
---
spring:
  profiles: cloud
  cloud:
    stream:
      bindings:
        output:
          destination: order
          contentType: 'application/json'
eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    nonSecurePort: 80
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
    leaseRenewalIntervalInSeconds: 5
  client:
    region: default
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.discovery-service.credentials.uri:http://localhost:8761}/eureka/